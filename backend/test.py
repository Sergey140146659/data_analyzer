from fastapi import APIRouter, Response, Request
from first_part.process_data.initial_values import *
from first_part.process_data.empirical_distribution_function import *
from first_part.process_data.empirical_distribution_density import *
from first_part.checking_valid_distr.point_estimation import *
from first_part.checking_valid_distr.check_distribution import *
from first_part.graphics.initial_data_show import *
from first_part.graphics.empirical_distribution_function_show import *
from first_part.graphics.empirical_distribution_density_show import *

obj = {"data":[50.0, 50.0, 50.0, 50.0, 50.0, 51.0, 50.0, 52.0, 51.0, 50.0, 50.0, 49.0, 48.0, 47.0, 50.0, 60.0, 68.0, 77.0, 90.0, 98.0, 102.0, 108.0, 113.0, 112.0, 108.0, 103.0, 100.0, 96.0, 91.0, 88.0, 84.0, 80.0, 78.0, 75.0, 73.0, 70.0, 68.0, 66.0, 64.0, 62.0, 60.0, 58.0, 56.0, 54.0, 52.0, 50.0, 49.0, 47.0, 46.0, 45.0, 44.0, 45.0, 46.0, 47.0, 47.0, 48.0, 48.0, 48.0, 47.0, 46.0, 46.0, 45.0, 44.0, 43.0, 27.0, 29.0, 35.0, 35.0, 36.0, 37.0, 37.0, 39.0, 39.0, 42.0, 41.0, 41.0, 42.0, 42.0, 42.0, 42.0, 41.0, 40.0, 40.0, 41.0, 43.0, 47.0, 42.0, 56.0, 59.0, 60.0, 60.0, 61.0, 62.0, 67.0, 71.0, 74.0, 76.0, 77.0, 77.0, 76.0, 74.0, 73.0, 70.0, 68.0, 66.0, 64.0, 62.0, 60.0, 59.0, 59.0, 59.0, 58.0, 59.0, 59.0, 60.0, 67.0, 60.0, 60.0, 60.0, 60.0, 60.0, 60.0, 59.0, 58.0, 56.0, 55.0, 54.0, 54.0, 52.0, 51.0, 50.0, 48.0, 47.0, 46.0, 45.0, 44.0, 27.0, 27.0, 27.0, 27.0, 29.0, 32.0, 34.0, 36.0, 36.0, 38.0, 39.0, 40.0, 41.0, 41.0, 40.0, 40.0, 40.0, 40.0, 40.0, 41.0, 43.0, 45.0, 48.0, 50.0, 54.0, 58.0, 65.0, 68.0, 69.0, 68.0, 68.0, 66.0, 65.0, 64.0, 63.0, 61.0, 59.0, 58.0, 56.0, 55.0, 54.0, 52.0, 50.0, 49.0, 48.0, 47.0, 46.0, 45.0, 44.0, 45.0, 44.0, 44.0, 46.0, 47.0, 48.0, 48.0, 47.0, 46.0, 55.0, 54.0, 55.0, 56.0, 56.0, 56.0, 55.0, 54.0, 53.0, 52.0, 51.0, 50.0, 49.0, 48.0, 47.0, 46.0, 44.0, 43.0, 42.0, 41.0, 40.0, 38.0, 48.0, 47.0, 46.0, 45.0, 44.0, 42.0, 41.0, 40.0, 39.0, 38.0, 40.0, 44.0, 50.0, 65.0, 72.0, 76.0, 76.0, 75.0, 74.0, 75.0, 76.0, 74.0, 74.0, 73.0, 72.0, 70.0, 68.0, 66.0, 64.0, 62.0, 60.0, 61.0, 64.0, 66.0, 69.0, 74.0, 78.0, 83.0, 89.0, 92.0, 93.0, 99.0, 105.0, 109.0, 108.0, 106.0, 104.0, 101.0, 100.0, 98.0, 96.0, 96.0, 96.0, 93.0, 90.0, 87.0, 84.0, 80.0, 76.0, 73.0, 70.0, 67.0, 64.0, 62.0, 59.0, 57.0, 55.0, 53.0, 50.0, 49.0, 48.0, 46.0, 45.0, 44.0, 42.0, 41.0, 40.0, 39.0, 38.0, 38.0, 29.0, 28.0, 28.0, 27.0, 27.0, 26.0, 26.0, 26.0, 25.0, 25.0, 24.0, 24.0, 24.0, 28.0, 29.0, 32.0, 36.0, 40.0, 45.0, 50.0, 53.0, 56.0, 63.0, 64.0, 65.0, 65.0, 64.0, 63.0, 60.0, 59.0, 58.0, 59.0, 62.0, 64.0, 68.0, 70.0, 72.0, 72.0, 70.0, 69.0, 67.0, 72.0, 72.0, 72.0, 73.0, 73.0, 72.0, 73.0, 73.0, 70.0, 68.0, 66.0, 64.0, 63.0, 62.0, 61.0, 59.0, 57.0, 56.0, 55.0, 54.0, 52.0, 51.0, 49.0, 48.0, 46.0, 45.0, 44.0, 42.0, 41.0, 40.0, 40.0, 38.0, 37.0, 36.0, 36.0, 35.0, 36.0, 39.0, 40.0, 44.0, 46.0, 56.0, 58.0, 62.0, 64.0, 68.0, 73.0, 76.0, 76.0, 76.0, 74.0, 72.0, 70.0, 68.0, 66.0, 65.0, 63.0, 60.0, 58.0, 56.0, 54.0, 53.0, 52.0, 50.0, 49.0, 48.0, 46.0, 45.0, 45.0, 44.0, 44.0, 43.0, 42.0, 41.0, 40.0, 39.0, 38.0, 38.0, 38.0, 38.0, 40.0, 43.0, 45.0, 47.0, 48.0, 50.0, 52.0, 53.0, 55.0, 58.0, 62.0, 66.0, 69.0, 72.0, 73.0, 73.0, 72.0, 71.0, 72.0, 74.0, 75.0, 75.0, 74.0, 74.0, 74.0, 74.0, 74.0, 72.0, 70.0, 68.0, 65.0, 64.0, 62.0, 60.0, 58.0, 57.0, 58.0, 62.0, 64.0, 65.0, 66.0, 65.0, 64.0, 62.0, 60.0, 58.0, 57.0, 55.0, 54.0, 52.0, 51.0, 49.0, 48.0, 47.0, 46.0, 45.0, 44.0, 43.0, 42.0, 42.0, 41.0, 41.0, 40.0, 40.0, 39.0, 38.0, 38.0, 37.0, 36.0, 36.0, 36.0, 35.0, 35.0, 34.0, 34.0, 34.0, 33.0, 33.0, 32.0, 32.0, 32.0, 46.0, 45.0, 44.0, 44.0, 44.0, 45.0, 46.0, 46.0, 46.0, 46.0, 46.0, 45.0, 45.0, 46.0, 45.0, 47.0, 52.0, 53.0, 56.0, 59.0, 60.0, 61.0, 60.0, 59.0, 58.0, 57.0, 55.0, 54.0, 53.0, 52.0, 50.0, 50.0, 51.0, 52.0, 51.0, 51.0, 50.0, 51.0, 52.0, 52.0, 53.0, 53.0, 54.0, 53.0, 53.0, 52.0, 52.0, 51.0, 50.0, 49.0, 47.0, 46.0, 45.0, 44.0, 43.0, 42.0, 43.0, 42.0, 42.0, 41.0, 41.0, 41.0, 41.0, 41.0, 41.0, 42.0, 42.0, 45.0, 47.0, 50.0, 52.0, 56.0, 58.0, 60.0, 62.0, 62.0, 69.0, 74.0, 76.0, 76.0, 80.0, 80.0, 78.0, 75.0, 72.0, 70.0, 68.0, 66.0, 62.0, 60.0, 57.0, 55.0, 54.0, 52.0, 50.0, 48.0, 46.0, 44.0, 43.0, 42.0, 41.0, 40.0, 38.0, 38.0, 37.0, 36.0, 36.0, 36.0, 36.0, 35.0, 35.0, 35.0, 34.0, 33.0, 33.0, 36.0, 34.0, 34.0, 35.0, 36.0, 42.0, 41.0, 41.0, 40.0, 36.0, 36.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 36.0, 36.0, 36.0, 36.0, 36.0, 36.0, 36.0, 36.0, 38.0, 46.0, 52.0, 52.0, 55.0, 57.0, 58.0, 61.0, 65.0, 66.0, 70.0, 73.0, 74.0, 74.0, 75.0, 73.0, 72.0, 69.0, 67.0, 66.0, 64.0, 62.0, 60.0, 57.0, 55.0, 53.0, 52.0, 50.0, 48.0, 46.0, 45.0, 43.0, 42.0, 40.0, 38.0, 37.0, 36.0, 35.0, 34.0, 32.0, 31.0, 30.0, 30.0, 30.0, 30.0, 30.0, 29.0, 29.0, 29.0, 29.0, 30.0, 30.0, 31.0, 33.0, 33.0, 37.0, 39.0, 42.0, 48.0, 52.0, 58.0, 60.0, 62.0, 63.0, 63.0, 64.0, 66.0, 66.0, 67.0, 69.0, 69.0, 70.0, 70.0, 70.0, 68.0, 66.0, 64.0, 62.0, 60.0, 58.0, 57.0, 55.0, 53.0, 52.0, 50.0, 48.0, 47.0, 46.0, 44.0, 43.0, 42.0, 40.0, 39.0, 38.0, 37.0, 36.0, 36.0, 35.0, 35.0, 34.0, 28.0, 28.0, 29.0, 30.0, 31.0, 32.0, 33.0, 33.0, 33.0, 33.0, 34.0, 36.0, 39.0, 41.0, 43.0, 44.0, 44.0, 44.0, 44.0, 45.0, 50.0, 57.0, 60.0, 64.0, 66.0, 66.0, 66.0, 67.0, 67.0, 71.0, 76.0, 87.0, 92.0, 93.0, 91.0, 89.0, 85.0, 82.0, 79.0, 76.0, 73.0, 70.0, 68.0, 64.0, 62.0, 59.0, 57.0, 55.0, 53.0, 50.0, 48.0, 47.0, 45.0, 44.0, 43.0, 42.0, 40.0, 39.0, 38.0, 37.0, 36.0, 35.0, 34.0, 33.0, 22.0, 22.0, 21.0, 21.0, 21.0, 21.0, 21.0, 21.0, 22.0, 22.0, 24.0, 27.0, 28.0, 34.0, 35.0, 36.0, 37.0, 38.0, 38.0, 37.0, 43.0, 43.0, 43.0, 44.0, 46.0, 53.0, 63.0, 70.0, 80.0, 89.0, 89.0, 88.0, 86.0, 83.0, 81.0, 78.0, 75.0, 72.0, 70.0, 67.0, 64.0, 62.0, 60.0, 60.0, 59.0, 58.0, 57.0, 56.0, 55.0, 53.0, 51.0, 49.0, 48.0, 46.0, 44.0, 42.0, 41.0, 40.0, 38.0, 37.0, 36.0, 35.0, 34.0, 33.0, 32.0, 32.0, 31.0, 30.0, 29.0, 28.0, 27.0, 27.0],

"k":0
     }

json_path = "first_part/info.json"
set_initial_state(json_path, obj)

fst_set_values(json_path, obj['k'])
show_points(json_path, key='data', label='Исходные данные', name='unsorted_data')
show_points(json_path, key='data_sorted', label='Отсортированные исходные данные', name='sorted_data')
get_intervals(json_path)
get_emp_freqs(json_path)
get_inter_freqs(json_path)
get_middle_points(json_path)
get_acc_freqs(json_path)
get_emp_dens(json_path)
get_border_points(json_path)

emp_dist_func_show(json_path, name='emp_distr_function')
emp_dist_func_dens_show(json_path, name='emp_density_no_curve')

get_sample_mean(json_path)
get_sample_var(json_path)
get_corr_sample_var(json_path)
get_sample_asymm(json_path)
get_sample_excess(json_path)
emp_dist_func_dens_show(json_path, distribution_curve='normal', name='emp_density_normal')
emp_dist_func_dens_show(json_path, distribution_curve='lin', name='emp_density_lin')
emp_dist_func_dens_show(json_path, distribution_curve='exp', name='emp_density_exp')

get_theor_freqs(json_path, distribution='normal')
get_theor_freqs(json_path, distribution='exp')
get_theor_freqs(json_path, distribution='lin')
unite_freqs(json_path)
get_chi_squared(json_path, distr='normal')
get_chi_squared(json_path, distr='exp')
get_chi_squared(json_path, distr='lin')
get_statistics(json_path, distr='normal')
get_statistics(json_path, distr='exp')
get_statistics(json_path, distr='lin')

with open(json_path, 'r') as file:
    info_dict = json.load(file)

rounded_dict = round_dict(info_dict)


t_r = tuple(rounded_dict.items())
t = tuple(info_dict.items())
for i in range(len(t_r)):
    print(f'rounded_dict: {t_r[i][0]} - {t_r[i][1]}')
    print(f'info_dict: {t[i][0]} - {t[i][1]}')
    print()